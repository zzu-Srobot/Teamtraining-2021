中国机器人大赛-多人辨识比赛代码：202010C\multi_recognation\src\multi_recognation2.cpp
Robcup2020-Farewell比赛代码（最终没有比）：2020RobCup\Farewell\sub-point-go\src\main.cpp
                                            202010C\openpose_ros\openpose_ros\src\go_handsUp.cpp
                                            202010C\sub_point_go\src\handup_go_test.cpp
                                            2020RobCup\Farewell\pub_object\src\pub_umbrella.cpp
                                            2020RobCup\Farewell\sub-point-go\src\umbrella_go.cpp
                                            一系列shell脚本

1.人机跟随（找人,找物体）：202010C\multi_recognation\src\multi_recognation2.cpp
    1.0 如何接收Kinect发送的图像
    1.1 如何通过Kinect获取图像上每一个像素点的深度距离信息
    1.2 在一张图像上，如何选择到特定的人面前（最左边，最右边，最中间，距离最近等）
    1.3 如何优化距离
    1.4 https://www.jianshu.com/p/f3b027e7a406（MobileNetSSD_deploy）
2.目标检测
    2.0 darknet_ros功能包负责发送一张图像上各个目标物体的名称坐标 roslaunch darknet_ros yolo_v3.launch（预训练好的）
    2.1 我们接收此话题即可，参考2020RobCup\Farewell\pub_object\src\pub_umbrella.cpp，过滤之后将我们需要的目标物体的坐标信息再发出去
    2.2 再编写一个节点接收目标物体的坐标信息，有了坐标，后续可以前进到这个物体面前：2020RobCup\Farewell\sub-point-go\src\umbrella_go.cpp
    2.3 YOLOV3:https://blog.csdn.net/weixin_44290841/article/details/99862848?spm=1001.2014.3001.5501  (讲一下launch文件)
3.姿态识别
   2.0  openpose_ros功能包负责发送一张图像上各个人体的25个坐标 roslaunch openpose_ros openpose_ros.launch
   2.1 我们接收此话题即可，参考202010C\openpose_ros\openpose_ros\src\go_handsUp.cpp，过滤简单判断之后将我们需要的目标人体的坐标信息再发出去
   2.2 再编写一个节点接收目标人体的坐标信息，有了坐标，后续可以前进到这个物体面前：202010C\sub_point_go\src\handup_go_test.cpp
   2.3 可以在202010C\openpose_ros\openpose_ros\src\gflags_options.cpp设置信息，如获取手的骨骼点
   2.4 摔倒检测

openpose 
主要功能：返回人的骨骼关键点坐标及置信度，包括人脸，人手及人体的几乎所有关节点，相关研究论文也是发布在CVPR17上
openpose是基于caffe框架的深度学习的算法
相关配置可见https://blog.csdn.net/DragonGiri/article/details/97623603
编译配置好后openpose，相当于就把openpose变成了一个库，可以随时用它

接下来就是openpose在ros中的相关功能包的配置
ros基础已在之前介绍过，不用多说了。编好后，这个功能包就相当于可以实现摄像头调用openpose了
只需再自己写一个功能包来获取子所需要的参数即可


获取相关参数，就可以利用它们进行姿态的判断
静态判断法：
粗略大致的判断：（比赛）
对图像中的一些点，比如人体中心点低于图像的某某高度，可以判断非站立
此时可能坐下可能摔倒，再利用腿部的关节点做文章，找到坐与摔的区别

更为精确的判断：
采用数学计算及数学分析的方法，利用坐标点得出一些关键角度和比例差等等进行分析
谷歌上找到了一篇类似想法的文章：https://www.iteye.com/blog/yacare-1950112

动态判断法：
根据多帧的差异，计算相关的加速度和速度差，来判断，常用于跌倒等动作幅度变化大的检测

文摘举例：“根据运动学分析,一个典型的摔倒动作曲线主要由人体失重过程,人体与地面的碰撞和人体相对地面静止3部分组成。基于这3个过程建立了一种摔倒检测算法...”

4.shell脚本，如何在节点中启用脚本
